version: 2.1

quality_gem_version: &quality_gem_version python-37

orbs:
  quality: bluelabs/quality@0.0.2

jobs:
  test:
    parameters:
      python_version:
        type: string
        description: "Version of python to test against"
    docker:
      - image: circleci/python:<<parameters.python_version>>
    steps:
      - checkout
      - restore_cache:
          key: deps-v1-<<parameters.python_version>>-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "setup.py" }}
      - run:
          name: Install python deps in venv
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip3 install --progress-bar=off -r requirements.txt
            pip3 install --progress-bar=off -e .
      - save_cache:
          key: deps-v1-<<parameters.python_version>>-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "setup.py" }}
          paths:
            - "venv"
      - run:
          name: test
          command: |
            . venv/bin/activate
            make citest coverage
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports
      - store_artifacts:
          path: cover


  publish:
    parameters:
      python_version:
        type: string
        description: "Version of python to test against"
        default: '3.6'
    docker:
      - image: circleci/python:<<parameters.python_version>>
    steps:
      - checkout
      - restore_cache:
          key: deps-v1-<<parameters.python_version>>-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "setup.py" }}
      - run:
          name: Install python deps in venv
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip3 install --progress-bar=off -r requirements.txt
            pip3 install --progress-bar=off -e .
      - save_cache:
          key: deps-v1-<<parameters.python_version>>-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "setup.py" }}
          paths:
            - "venv"
      - run:
          name: verify git tag vs. version
          command: |
            . venv/bin/activate
            python3 setup.py verify
      - run:
          name: init .pypirc
          command: |
            cat >> $HOME/.pypirc \<<EOF
            [distutils]
            index-servers =
                pypi

            [pypi]
            username: $PYPI_USER
            password: $PYPI_PASSWORD
            EOF
      - run:
          name: create packages
          command: |
            . venv/bin/activate
            make package
      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            twine upload -r pypi dist/*

workflows:
  version: 2
  test:
    jobs:
      - quality/check-quality-job:
          custom_rakefile: Rakefile.quality
          image_tag: *quality_gem_version
      - test:
          name: test-3.6
          python_version: "3.6"
          filters:
            tags:
              only: /v\d+\.\d+\.\d+(-[\w]+)?/
      - test:
          name: test-3.7
          python_version: "3.7"
          filters:
            tags:
              only: /v\d+\.\d+\.\d+(-[\w]+)?/
      - test:
          name: test-3.8
          python_version: "3.8"
          filters:
            tags:
              only: /v\d+\.\d+\.\d+(-[\w]+)?/
      # To trigger publishing to pypi for others to be able to install
      # with `pip install` or add to requirements.txt, you can run
      # publish.sh
      - publish:
          context: PyPI
          requires:
            - test-3.6
            - test-3.7
            - test-3.8
          filters:
            tags:
              only: /v\d+\.\d+\.\d+(-[\w]+)?/
            branches:
              ignore: /.*/
